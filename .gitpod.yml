# This configuration file was automatically generated by Gitpod.
# Please adjust to your needs (see https://www.gitpod.io/docs/introduction/learn-gitpod/gitpod-yaml)
# and commit this file to your remote git repository to share the goodness with others.

# Learn more from ready-to-use templates: https://www.gitpod.io/docs/introduction/getting-started/quickstart

tasks:
  - init: |
      # Update and install necessary tools
      sudo apt-get update > /workspace/init.log 2>&1
      sudo apt-get install -y apt-transport-https ca-certificates curl > /workspace/init.log 2>&1

      # Install kubectl
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" >> /workspace/init.log 2>&1
      sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      # Install minikube
      curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 >> /workspace/init.log 2>&1
      sudo install -o root -g root -m 0755 minikube-linux-amd64 /usr/local/bin/minikube

      # Install Python virtual environment
      python3 -m venv venv

      # Install Python dependencies within the virtual environment
      source venv/bin/activate
      pip install -r requirements.txt >> /workspace/init.log 2>&1

      # Ensure Minikube is available and add it to the PATH
      echo 'export PATH=$PATH:/usr/local/bin' >> ~/.bashrc
      export PATH=$PATH:/usr/local/bin

  - command: |
      # Start Minikube with Docker driver and reduced resources
      minikube start --driver=docker --force --cpus=2 --memory=2048 || echo "Minikube failed to start."

      # Check Minikube status
      minikube status || echo "Minikube did not start successfully."

      # Activate the virtual environment
      source venv/bin/activate

      # Start the Flask development server
      python app.py




